
// MEMO
// 「濁音」「を」「ん」「伸ばし棒」「っ」「ぁぃぅぇぉ」はなし
// font-size: 1.5rem;で6文字が限界っぽい
// 3~6文字で問題を作る
// とりま、その文字を含む単語を5つずつ作る方針

const 問題あ系 = [
    // あ
    "こあら",
    "あいしてる",
    "あさひ",
    "ひあり",
    "あいさつ",

    // い
    "いのしし",
    "たいよう",
    "ういるす",
    "さいふ",
    "すいか",

    // う
    "ういろう",
    "うちわ",
    "くうこう",
    "ふくろう",
    "うくらいな",

    // え
    "えいかいわ",
    "えいせい",
    "えいよう",
    "えほうまき",
    "いすらえる",

    // お
    "おあしす",
    "おたふく",
    "おやつ",
    "いろおに",
    "おたから",

    // か
    "いか",
    "かたかな",
    "かかおまめ",
    "かるた",
    "もえかす",

    // き
    "いきもの",
    "きらきら",
    "きいろ",
    "きこり",
    "きのこのやま",

    // く
    "くりすます",
    "くりおね",
    "くま",
    "かまくら",
    "まくら",

    // け
    "けむし",
    "けとる",
    "けにあ",
    "けいさつ",
    "みけねこ",

    // こ
    "こるく",
    "みるくここあ",
    "こうこうせい",
    "こいこい",
    "こあくま",

    // さ
    "さしみ",
    "さる",
    "さるもねら",
    "さかなや",
    "やさい",

    // し
    "しすてむ",
    "しまうま",
    "しくしく",
    "しいたけ",
    "あしすと",

    // す
    "すまほ",
    "すいす",
    "すきる",
    "あいす",
    "たこす",

    // せ
    "せいかつ",
    "きのせい",
    "せせらわらう",
    "せかいへいわ",
    "かわせみ",

    // そ
    "そうなのか",
    "かわいそう",
    "そふと",
    "そつなく",
    "きそくせい",

    // た
    "たぬき",
    "あきた",
    "たこらいす",
    "たたり",
    "おおあたり",

    // ち
    "ちくわ",
    "ちけい",
    "かちかちやま",
    "あちらこちら",
    "ほちきす",

    // つ
    "つわもの",
    "ついすと",
    "きつつき",
    "もちつき",
    "つきみ",

    // て
    "てとら",
    "てぬき",
    "てきすと",
    "てきはつ",
    "てにす",

    // と
    "とまらない",
    "といち",
    "とらいある",
    "かなしいとき",
    "とこや",

    // な
    "なまこ",
    "なまえ",
    "なないろ",
    "なきむし",
    "なくしもの",

    // に
    "ほしにく",
    "にこにこ",
    "あにさきす",
    "ほにほに",
    "にわとり",

    // ぬ
    "ぬくもり",
    "ぬけみち",
    "ぬか",
    "ぬま",
    "ぬりえ",

    // ね
    "ねこ",
    "ねくたい",
    "うれしいね",
    "はねる",
    "ほねぬき",

    // の
    "のるま",
    "のろい",
    "きのう",
    "ものくろ",
    "まなつのよる",

    // は
    "はくさい",
    "はらはら",
    "はいいろ",
    "おはなし",
    "はいりほう",

    // ひ
    "ひらかれる",
    "ひもの",
    "ひきこもり",
    "ひやけ",
    "まひるま",

    // ふ
    "ふつう",
    "ふゆかい",
    "とうふ",
    "ふるさと",
    "ふいうち",

    // へ
    "へちま",
    "へいせい",
    "へりうむ",
    "すいへい",
    "へや",

    // ほ
    "ほし",
    "ほこり",
    "あほくさい",
    "とうほく",
    "ほたる",

    // ま
    "まくら",
    "まくろてき",
    "はまなこ",
    "まきわり",
    "うまのり",

    // み
    "みつもり",
    "みつけた",
    "あみもの",
    "みらい",
    "みなと",

    // む
    "むなしい",
    "むりらす",
    "むし",
    "むらさき",
    "なまはむ",

    // め
    "めいさく",
    "はめこみ",
    "めきしこ",
    "めからうろこ",
    "めいれい",

    // も
    "もちつき",
    "もとねた",
    "やもり",
    "もよう",
    "もとめる",

    // や
    "おこのみやき",
    "やたい",
    "ほやほや",
    "みやすい",
    "やられた",

    // ゆ
    "ゆり",
    "ゆかり",
    "ゆき",
    "こなゆき",
    "ゆるして",

    // よ
    "よるのゆめ",
    "よふかし",
    "よきせぬ",
    "よろしく",
    "くよくよ",

    // ら
    "らいふ",
    "むらさきいろ",
    "からむ",
    "ふらくたる",
    "たらいまわし",

    // り
    "りかいした",
    "むりくり",
    "りえき",
    "あめりか",
    "るりいろ",

    // る
    "たるたる",
    "はる",
    "あるく",
    "るいけい",
    "へるすけあ",

    // れ
    "ほまれ",
    "つかれた",
    "はれるや",
    "あめのちはれ",
    "れいとう",

    // ろ
    "ろむる",
    "ろうそく",
    "ひろい",
    "ろうか",
    "まろまゆ",

    // わ
    "わかる",
    "わからない",
    "わらえる",
    "わふく",
    "ふわふわ",
];

const 問題ぱ行 = [
    // ぱ
    "ぱれすちな",
    "はらぺこ",
    "ぱらそる",
    "すぱい",
    "ぱぱ",

    // ぴ
    "ぴあの",
    "ぴかぴか",
    "かぴかぴ",
    "ひえぴた",
    "ぴかそ",
    
    // ぷ
    "ぷらすしこう",
    "ぷかぷか",
    "ぷりくら",
    "えいぷりる",
    "ぎぷす",
    
    // ぺ
    "ぺこぺこ",
    "えうろぺ",
    "ぺるみ",
    "ぺるそな",
    "こぴぺ",

    // ぽ
    "あぽろ",
    "えぽな",
    "かかぽ",
    "くてのぽま",
    "ぽとふ",
];

const 問題きゃ系 = [
    // きゃ
    "きゃりあ",
    "きゃらめる",
    "ようきゃ",
    "きゃくさき",
    "おきゃくさま",

    // きゅ
    "やきゅう",
    "きゅうたい",
    "かりきゅらむ",
    "きゅうか",
    "きゅうたい",

    // きょ
    "きょろきょろ",
    "きょかしょ",
    "きょくしょ",
    "きょうかしょ",
    "まきょう",

    // しゃ
    "しゃかい",
    "しゃしゃる",
    "かいしゃ",
    "おしゃれ",
    "きしゃ",

    // しゅ
    "しゅうかい",
    "ほしゅう",
    "しゅうり",
    "かしゅ",
    "しゅうりょう",

    // しょ
    "かしょう",
    "しょかい",
    "しょきか",
    "うしょく",
    "しょり",

    // ちゃ
    "てくすちゃ",
    "ちゃくらむ",
    "おちゃ",
    "ちゃつみ",
    "ちゃいむ",

    // ちゅ
    "ちゅうい",
    "ちゅうくらい",
    "ちゅうしゃ",
    "かちゅう",
    "とちゅう",

    // ちょ
    "ちょうき",
    "ちょいす",
    "ちょき",
    "ぬちょぬちょ",
    "ゆるしてちょ",

    // にゃ
    "ほにゃらら",
    "むにゃむにゃ",
    "にゃあ",
    "くにゃくにゃ",
    "ふにゃふにゃ",

    // にゅ
    "むにゅむにゅ",
    "ほにゅうるい",
    "かにゅう",
    "にゅうりょく",
    "にゅうこ",

    // にょ
    "にょう",
    "にょうい",
    "にょい",
    "にょうそ",
    "にょろにょろ",

    // ひゃ
    "ひゃく",
    "ひゃくらい",
    "ひゃくまなこ",
    "ひゃくはち",
    "ひゃくにち",

    // ひゅ
    "ひゅうひゅう",
    "ひゅうひゅう", // 単語が少なすぎる… 抽出確率を同じにするために、同じ単語を使う
    "ひゅうひゅう",
    "ひゅうひゅう",
    "ひゅうひゅう",

    // ひょ
    "ひょろひょろ",
    "ひょろひょろ", // 単語がない…
    "ひょろひょろ",
    "ひょろひょろ",
    "ひょろひょろ",

    // みゃ
    "みゃくみゃく",
    "みゃくあり",
    "みゃくなし",
    "みゃお",
    "みゃあ",

    // みゅ
    "みゅう",
    "みゅう", // 単語がない…
    "みゅう",
    "みゅう",
    "みゅう",

    // みょ
    "みょうやく",
    "みょうなこと",
    "みょうけい",
    "みょうしゅ",
    "みょうさく",

    // りゃ
    "しょうりゃく",
    "りゃくれき",
    "いかりゃく",
    "ちりゃく",
    "めりりゃ",

    // りゅ
    "ほりゅう",
    "りゅうい",
    "りゅうたい",
    "りゅういき",
    "りゅうきゅう",

    // りょ
    "りょうかい",
    "ほりょ",
    "りょうり",
    "たいりょう",
    "しょうりょう",
];

const 問題ぴゃ行 = [
    // ぴゃ
    "ぴゃぴゃぴゃ",
    "ぴゃぴゃぴゃ", // 単語がない…
    "ぴゃぴゃぴゃ",
    "ぴゃぴゃぴゃ",
    "ぴゃぴゃぴゃ",

    // ぴゅ
    "ぴゅうた",
    "ぴゅあ",
    "ぴゅしす",
    "ぴゅうぴゅう",
    "ぴゅりすむ",

    // ぴょ
    "ぴょこぴょこ",
    "ぴょこぴょこ", // 単語がない…
    "ぴょこぴょこ",
    "ぴょこぴょこ",
    "ぴょこぴょこ",
];

const 清音正規表現 = /^[あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわ]+$/;
const 全部正規表現 = /^[あいうえおかきくけこさしすせそたちつてとなにぬねのはひふへほまみむめもやゆよらりるれろわ|ぱぴぷぺぽ|きゃ|きゅ|きょ|しゃ|しゅ|しょ|ちゃ|ちゅ|ちょ|にゃ|にゅ|にょ|ひゃ|ひゅ|ひょ|みゃ|みゅ|みょ|りゃ|りゅ|りょ|ぴゃ|ぴゅ|ぴょ]+$/;

function 実践問題文生成(needぱきゃ) {
    let text = "";

    if (needぱきゃ) {
        if (Math.random() < 0.3) {
            text = 問題きゃ系[randomInt(問題きゃ系.length)];
        }
        else if (Math.random() < 0.08) {
            text = 問題ぱ行[randomInt(問題ぱ行.length)];
        }
        else if (Math.random() < 0.1) {
            text = 問題ぴゃ行[randomInt(問題ぴゃ行.length)];
        }
        else {
            text = 問題あ系[randomInt(問題あ系.length)];
        }
    }
    else {
        text = 問題あ系[randomInt(問題あ系.length)];
    }

    // バリデーション 別にいらないが念のため
    if (
        needぱきゃ && !全部正規表現.test(text) ||
        !needぱきゃ && !清音正規表現.test(text)
    ) {
        console.error(`未対応の問題：${text}`);
        return 実践問題文生成(needぱきゃ);
    }

    return text;
}

function text2mondai(text, needぱきゃ) {
    const mondai = [];

    for (let i = 0; i < text.length; i++) {
        // 最後のindexではない かつ 次の文字が「ゃゅょ」の場合
        if (needぱきゃ && i < text.length - 1 && /^(ゃ|ゅ|ょ)$/.test(text[i + 1])) {
            mondai.push(text[i] + text[i + 1]);
            i++; // ひとつ進める
            continue;
        }
        mondai.push(text[i]);
    }

    return mondai;
}

function 実践問題リスト生成(needぱきゃ, 問題数 = 20) {
    const textList = [];
    const mondaiList = [];

    for (let i = 0; i < 問題数; i++) {
        const text = 実践問題文生成(needぱきゃ);
        if (textList.includes(text)) {
            // 重複禁止
            i--;
            continue;
        }
        textList.push(text);
        const mondai = text2mondai(text, needぱきゃ);
        mondaiList.push(mondai);
    }

    return mondaiList;
}
